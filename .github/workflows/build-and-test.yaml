name: "Build and test"
on:
  push:
    tags-ignore: ["*"] # tags run tagged-release workflow
    branches: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.15.5"
      - uses: actions/checkout@v2
      - run: make all
      - uses: actions/upload-artifact@v2.2.2
        with:
          name: kubectl-schemahero
          path: bin/kubectl-schemahero
      - uses: actions/upload-artifact@v2.2.2
        with:
          name: manager
          path: bin/manager

  test-postgres:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        postgres_version: ["10.14", "11.9", "12.4", "13-beta3"]
    steps:
      - uses: actions/checkout@v2
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v2.0.8
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/postgres ${{matrix.postgres_version}}

  test-mysql:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        mysql_version: ["5.6.49", "5.7.31", "8.0.21"]
    steps:
      - uses: actions/checkout@v2
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v2.0.8
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/mysql ${{matrix.mysql_version}}

  test-cockroach:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        cockroachdb_version: ["v19.2.9", "v20.1.4"]
    steps:
      - uses: actions/checkout@v2
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v2.0.8
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/cockroach ${{matrix.cockroachdb_version}}

  test-cassandra:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        cassandra_version: ["3.11.8"]
    steps:
      - uses: actions/checkout@v2
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v2.0.8
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/cassandra ${{matrix.cassandra_version}}

  test-sqlite:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        sqlite_version: ["3.33.0"]
    steps:
      - uses: actions/checkout@v2
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v2.0.8
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/sqlite ${{matrix.sqlite_version}}

  kots:
    runs-on: ubuntu-latest
    name: kots
    needs: [test-mysql, test-postgres]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v2.0.8
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero

      - uses: azure/docker-login@v1
        with:
          login-server: registry.replicated.com
          username: ${{ secrets.REPLICATED_API_TOKEN }}
          password: ${{ secrets.REPLICATED_API_TOKEN }}
      - run: make kotsimages

      - run: ./bin/kubectl-schemahero install --yaml --out-dir=./kots --enterprise --namespace="repl{{ Namespace }}" --enterprise-tag=alpha

      - name: Lint the release
        id: lint-action
        uses: replicatedhq/action-kots-lint@v0.2.0
        with:
          replicated-app: "schemahero-enterprise"
          replicated-api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          yaml-dir: kots

      - name: Create the release
        id: test-action
        uses: replicatedhq/action-kots-release@v0.5.0
        with:
          replicated-app: "schemahero-enterprise"
          replicated-api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          yaml-dir: kots
